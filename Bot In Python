from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from time import sleep, strftime
from random import randint
import pandas as pd

browser = webdriver.Firefox()

browser.get('https://www.instagram.com/accounts/login/?source=auth_switcher')
sleep(2)

username_input = browser.find_element_by_name('username')
username_input.send_keys("#your instagram username")
password_input = browser.find_element_by_name('password')
password_input.send_keys("#your instagram password")

login_link = browser.find_element_by_xpath("//button[@type='submit']")
login_link.click()

sleep(5)

notnow = browser.find_element_by_css_selector("button.sqdOP:nth-child(1)")
notnow.click()

sleep(5)

notnow_noti = browser.find_element_by_css_selector("button.aOOlW:nth-child(2)")
notnow_noti.click()

sleep(5)


hashtag_list = ['quotes', 'writingcommunity']
prev_user_list = []
new_followed = []
tag = -1
followed = 0
likes = 0
comments = 0

for hashtag in hashtag_list:
    tag += 1
    browser.get('https://www.instagram.com/explore/tags/'+ hashtag_list[tag] + '/')
    sleep(5)
    first_thumbnail = browser.find_element_by_xpath('//*[@id="react-root"]/section/main/article/div[1]/div/div/div[1]/div[1]/a/div/div[2]')
    
    first_thumbnail.click()
    sleep(randint(1,3))    
    try:        
        for x in range(1,200):
            username = browser.find_element_by_xpath('/html/body/div[5]/div[2]/div/article/header/div[2]/div[1]/div[1]/span/a').text
            
            if username not in prev_user_list:
                # If we already follow, do not unfollow
                if browser.find_element_by_xpath('/html/body/div[5]/div[2]/div/article/header/div[2]/div[1]/div[2]/button').text == 'Follow':
                    
                    browser.find_element_by_xpath('/html/body/div[5]/div[2]/div/article/header/div[2]/div[1]/div[2]/button').click()
                    
                    new_followed.append(username)
                    followed += 1

                    # Liking the picture
                    button_like = browser.find_element_by_xpath('/html/body/div[5]/div[2]/div/article/div[3]/section[1]/span[1]/button/div/span')
                    
                    button_like.click()
                    likes += 1
                    sleep(randint(18,25))

                    # Comments and tracker
                    comm_prob = randint(1,10)
                    print('{}_{}: {}'.format(hashtag, x,comm_prob))
                    if comm_prob > 2:
                        comments += 1
                        browser.find_element_by_xpath('/html/body/div[5]/div[2]/div/article/div[3]/section[1]/span[2]/button/div').click()
                        comment_box = browser.find_element_by_xpath('/html/body/div[5]/div[2]/div/article/div[3]/section[3]/div/form/textarea')

                        if (comm_prob < 5):
                            comment_box.send_keys('so true!')
                            sleep(1)
                        elif (comm_prob >= 5) and (comm_prob < 9):
                            comment_box.send_keys('Nice saying :)')
                            sleep(1)
                        elif comm_prob == 9:
                            comment_box.send_keys('nice poetry!!')
                            sleep(1)
                        elif comm_prob == 10:
                            comment_box.send_keys('great! :)')
                            sleep(1)
                        # Enter to post comment
                        comment_box.send_keys(Keys.ENTER)
                        sleep(randint(22,28))

                # Next picture
                browser.find_element_by_link_text('Next').click()
                sleep(randint(25,29))
            else:
                browser.find_element_by_link_text('Next').click()
                sleep(randint(20,26))
    # some hashtag stops refreshing photos (it may happen sometimes), it continues to the next
    except:
        continue

for n in range(0,len(new_followed)):
    prev_user_list.append(new_followed[n])
    
updated_user_df = pd.DataFrame(prev_user_list)
updated_user_df.to_csv('{}_users_followed_list.csv'.format(strftime("%Y%m%d-%H%M%S")))
print('Liked {} photos.'.format(likes))
print('Commented {} photos.'.format(comments))
print('Followed {} new people.'.format(followed))
